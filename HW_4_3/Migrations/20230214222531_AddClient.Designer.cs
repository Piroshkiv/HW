// <auto-generated />
using System;
using HW_4_3;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HW_4_3.Migrations
{
    [DbContext(typeof(EmployeeContext))]
    [Migration("20230214222531_AddClient")]
    partial class AddClient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HW_4_3.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ArturPiroshkiv@gmail.com",
                            FirstName = "Artur",
                            LastName = "Piroshkiv",
                            Phone = "+380786847267"
                        },
                        new
                        {
                            Id = 2,
                            Email = "IhorJakirov@gmail.com",
                            FirstName = "Ihor",
                            LastName = "Jakirov",
                            Phone = "+380987878783"
                        },
                        new
                        {
                            Id = 3,
                            Email = "DaniilMorphovich@gmail.com",
                            FirstName = "Daniil",
                            LastName = "Morphovich",
                            Phone = "+380926402640"
                        },
                        new
                        {
                            Id = 4,
                            Email = "MaximNalivaiko@gmail.com",
                            FirstName = "Maxim",
                            LastName = "Nalivaiko",
                            Phone = "+380027397293"
                        },
                        new
                        {
                            Id = 5,
                            Email = "DenisProlivaiko@gmail.com",
                            FirstName = "Denis",
                            LastName = "Prolivaiko",
                            Phone = "+380027397293"
                        });
                });

            modelBuilder.Entity("HW_4_3.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("HiredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("OfficeId");

                    b.HasIndex("TitleId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("HW_4_3.Models.EmployeeProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeProjectId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rate")
                        .HasColumnType("money");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject", (string)null);
                });

            modelBuilder.Entity("HW_4_3.Models.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OfficeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Office", (string)null);
                });

            modelBuilder.Entity("HW_4_3.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Budget")
                        .HasColumnType("money");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("Id");

                    b.ToTable("Project", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 8000m,
                            ClientId = 1,
                            Name = "Name1",
                            StartedDate = new DateTime(2023, 2, 15, 0, 25, 31, 478, DateTimeKind.Local).AddTicks(7755)
                        },
                        new
                        {
                            Id = 2,
                            Budget = 7000m,
                            ClientId = 1,
                            Name = "Name2",
                            StartedDate = new DateTime(2023, 2, 15, 0, 25, 31, 478, DateTimeKind.Local).AddTicks(7794)
                        },
                        new
                        {
                            Id = 3,
                            Budget = 9000m,
                            ClientId = 1,
                            Name = "Name3",
                            StartedDate = new DateTime(2023, 2, 15, 0, 25, 31, 478, DateTimeKind.Local).AddTicks(7797)
                        },
                        new
                        {
                            Id = 4,
                            Budget = 3000m,
                            ClientId = 1,
                            Name = "Name4",
                            StartedDate = new DateTime(2023, 2, 15, 0, 25, 31, 478, DateTimeKind.Local).AddTicks(7799)
                        },
                        new
                        {
                            Id = 5,
                            Budget = 10000m,
                            ClientId = 1,
                            Name = "Name5",
                            StartedDate = new DateTime(2023, 2, 15, 0, 25, 31, 478, DateTimeKind.Local).AddTicks(7801)
                        });
                });

            modelBuilder.Entity("HW_4_3.Models.Title", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TitleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Title", (string)null);
                });

            modelBuilder.Entity("HW_4_3.Models.Employee", b =>
                {
                    b.HasOne("HW_4_3.Models.Office", "Office")
                        .WithMany("Employees")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HW_4_3.Models.Title", "Title")
                        .WithMany("Employees")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("HW_4_3.Models.EmployeeProject", b =>
                {
                    b.HasOne("HW_4_3.Models.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HW_4_3.Models.Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("HW_4_3.Models.Project", b =>
                {
                    b.HasOne("HW_4_3.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("HW_4_3.Models.Client", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("HW_4_3.Models.Employee", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("HW_4_3.Models.Office", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HW_4_3.Models.Project", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("HW_4_3.Models.Title", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
